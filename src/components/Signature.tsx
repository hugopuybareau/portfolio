import { motion } from "framer-motion"
import { useState } from "react"
import { RotateCcw } from "lucide-react"

export default function AnimatedLogo() {
  const [key, setKey] = useState(0)

  return (
    <div className="flex flex-col items-center gap-2">
      <div className="flex justify-center items-center w-full max-w-md mx-auto">
        <motion.svg
          key={key}
          viewBox="0 0 3000 3200"
          className="w-[300px] h-auto"
          preserveAspectRatio="xMidYMid meet"
        >
          <g
            stroke="#f43f5e"
            strokeLinecap="round"
            fillRule="evenodd"
            strokeWidth="10"
            fill="none"
          >
            {paths.map((d, i) => (
              <motion.path
                key={i}
                d={d}
                initial={{ pathLength: 0, opacity: 0 }}
                animate={{ pathLength: 1, opacity: 1 }}
                transition={{
                  pathLength: {
                    duration: 3,
                    ease: "easeInOut",
                    delay: i * 0.3,
                  },
                  opacity: {
                    duration: 0,
                    delay: i * 0.3,
                  },
                }}
              />
            ))}
          </g>
        </motion.svg>
      </div>

      <motion.button
        onClick={() => setKey(k => k + 1)}
        className="text-stone-400 hover:text-stone-600 dark:hover:text-stone-300 transition-colors"
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        transition={{ duration: 1, delay: paths.length * 0.3 + 0.5 }}
      >
        <RotateCcw size={16} />
      </motion.button>
    </div>
  )
}

const paths = [
  `M2260 2995 c-260 -50 -498 -182 -421 -233 21 -14 48 -2 103 47 80 73
   85 75 284 120 513 116 1038 -148 952 -478 -19 -76 -291 -371 -341 -371 -9 0
   -60 -27 -114 -60 -150 -92 -160 -86 -167 95 -5 122 -12 155 -36 155 -25 0 -29
   -31 -25 -183 l6 -183 -91 -31 -90 -31 0 116 c0 300 -26 602 -53 602 -37 0 -54
   -85 -40 -196 6 -52 17 -197 24 -324 l12 -230 -166 -66 c-92 -36 -246 -95 -342
   -130 -96 -35 -175 -75 -175 -89 0 -45 75 -26 377 95 355 143 319 139 327 35 4
   -60 16 -86 40 -91 29 -6 32 8 22 105 l-12 111 73 30 c39 16 78 30 85 30 7 0 9
   -103 4 -229 -7 -181 -3 -232 18 -240 38 -14 43 8 61 276 l15 237 170 65 c154
   59 307 114 407 145 33 11 34 7 10 -32 -56 -92 72 -128 255 -72 54 16 100 30
   103 30 3 0 5 -14 5 -31 0 -33 76 -69 115 -54 14 5 25 -4 25 -21 0 -16 -24 -36
   -54 -43 -29 -8 -78 -31 -108 -52 -30 -22 -60 -39 -68 -39 -8 0 -137 -74 -287
   -164 -150 -90 -291 -173 -313 -185 -252 -137 -710 -489 -710 -546 0 -47 66
   -21 554 220 251 124 506 247 566 274 61 26 177 79 259 116 82 37 248 109 370
   159 579 238 621 276 305 276 -202 0 -325 45 -216 79 23 8 42 22 42 32 0 11 11
   19 25 19 35 1 256 114 301 156 21 19 42 32 46 29 15 -9 226 99 250 127 12 15
   40 28 61 28 21 0 43 13 50 30 6 16 18 26 26 21 8 -6 45 12 81 39 36 27 76 52
   88 57 12 4 16 14 9 22 -12 12 -253 -100 -277 -129 -5 -7 -41 -25 -80 -40 -38
   -15 -92 -42 -120 -61 -27 -19 -70 -40 -94 -48 -25 -7 -111 -53 -193 -102 -81
   -49 -158 -89 -170 -89 -13 0 -23 -13 -23 -28 0 -19 -20 -27 -62 -24 -34 3
   -108 -11 -165 -31 -126 -44 -173 -46 -173 -8 0 26 22 47 152 139 46 32 48 40
   21 56 -36 20 -128 -20 -173 -74 -39 -47 -157 -94 -265 -105 -118 -11 -118 -3
   -3 76 124 86 94 119 -66 72 -64 -19 -156 -46 -206 -61 -49 -14 -106 -33 -125
   -41 -21 -9 -35 -7 -35 7 0 12 12 22 27 22 93 0 333 300 333 416 0 311 -538
   569 -1000 479z m1855 -1115 c146 -12 152 -14 95 -37 -33 -13 -78 -32 -100 -42
   -22 -11 -143 -61 -270 -112 -126 -51 -303 -128 -391 -171 -89 -43 -169 -78
   -179 -78 -9 0 -220 -100 -468 -223 -249 -122 -461 -227 -472 -231 -36 -16 85
   83 183 150 154 105 467 304 477 304 5 0 58 32 119 70 60 39 113 70 119 70 11
   0 217 125 232 140 6 6 35 22 66 35 31 14 51 34 44 46 -7 11 -6 18 4 15 45 -15
   147 51 135 87 -8 26 -2 37 21 37 19 0 27 -9 18 -23 -8 -13 -3 -18 14 -12 15 5
   25 21 22 35 -3 15 6 20 25 13 17 -6 31 -3 31 8 0 11 27 0 60 -24 45 -34 100
   -48 215 -57z`,
]
